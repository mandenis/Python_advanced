	ЗАДАЧА
	Сумма чисел в файле
Вам доступен текстовый файл nums.txt. В файле могут быть записаны целые неотрицательные числа и все, что угодно. 
Числом назовем последовательность одной и более цифр, идущих подряд (число всегда неотрицательно).
Напишите программу, которая вычисляет сумму всех чисел, записанных в файле.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна вывести сумму всех чисел, записанных в файле.
Примечание 1. Если бы файл nums.txt содержал строки:


	РЕШЕНИЕ
with open(r'nums.txt', encoding='UTF-8') as file:
    sp = []
    multi_sp = []
    for st in file.readlines():
        sp.clear()
        for c in st:
            if c.isdigit():
                sp.append(c)
            else:
                sp.append(' ')
        s = ''.join(sp)
        multi_sp.append(s)
    total = 0
    for i in multi_sp:
        total += sum(map(int, i.strip().split()))
    print(total)

	ЗАДАЧА
Статистика по файлу
Вам доступен текстовый файл file.txt, набранный латиницей. Напишите программу, которая выводит количество букв латинского алфавита, 
слов и строк. Выведите три найденных числа в формате, приведенном в примере.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна вывести три найденных числа в формате, приведенном в примере.
Примечание 1. Если бы файл file.txt содержал строки:
Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
то результатом было бы:
Input file contains:
108 letters 
20 words 
4 lines 
Примечание 2. Словом называется последовательность из непробельных символов. Например, строка
abc a21 67pop    qwert bo7ok 83456
содержит 6 слов: abc, a21, 67pop, qwert, bo7ok, 83456.

	РЕШЕНИЕ
with open(r'file.txt', encoding='UTF-8') as file:
    a = 0
    b = 0
    c = 0
    for st in file.readlines():
        a += len([i for i in st if i.isalpha()])
        b += len([i for i in st.split()])
        c += 1
    print(f'Input file contains:', f'{a} letters', f'{b} words', f'{c} lines', sep='\n')

	ЗАДАЧА
Random name and surname
Вам доступны два текстовых файла first_names.txt и last_names.txt, один с именами, другой с фамилиями.
Напишите программу, которая c помощью модуля random создает 3 случайные пары имя + фамилия, а затем выводит их, 
каждую на отдельной строке.
Формат входных данных
На вход программе ничего не подается.

	РЕШЕНИЕ
from random import choice
with open(r'first_names.txt') as file, open(r'last_names.txt') as file2:
    a = [c.strip() for c in file.readlines()]
    b = [c.strip() for c in file2.readlines()]
    total = 0
    while total != 3:
        print(choice(a), choice(b))
        total += 1

	ЗАДАЧА
	Необычные страны
Вам доступен текстовый файл population.txt с названиями стран и численностью их населения, разделенными символом табуляции '\t'.
Напишите программу выводящую все страны, название которых начинается с буквы 'G', численность населения которых больше чем 500000 человек, 
не меняя их порядок.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна вывести названия стран, удовлетворяющие условиям задачи, каждое на отдельное строке.

	РЕШЕНИЕ
with open(r'population.txt', encoding='UTF-8') as file:
    sp = [k for k in [c.strip().split('\t') for c in file.readlines()]if k[0][0] == 'G' and int(k[1]) > 500_000]
    for c in sp:
        print(c[0])

	ЗАДАЧА
	CSV-файл
Вам доступен CSV-файл data.csv, содержащий информацию в csv формате. Напишите функцию read_csv для чтения данных из этого файла. 
Она должна возвращать список словарей, интерпретируя первую строку как имена ключей, а каждую последующую строку как значения этих ключей.
Формат входных данных
На вход программе ничего не подается.
Формат выходных данных
Программа должна содержать реализованную функцию read_csv.
Примечание 1. Вызывать функцию read_csv не нужно.
Примечание 2. Функция read_csv не должна принимать аргументов. 
Примечание 2. Подробнее прочитать про CSV-файлы можно тут.
Примечание 3. Считайте, что все ключи и значения по этим ключам в результирующем словаре имеют строковый тип (str).

	РЕШЕНИЕ
def read_csv():
    with open(r'data.csv', encoding='UTF-8') as file:
        st = [c.strip() for c in file.readline().split(',')]
        multi_sp = []
        for v in file.readlines():
            sp = dict(zip(st,[c.strip() for c in v.split(',')]))
            multi_sp.append(sp)
            sp = []
        return multi_sp

